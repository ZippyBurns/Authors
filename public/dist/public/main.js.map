{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/show-all/show-all.component.css","webpack:///./src/app/show-all/show-all.component.html","webpack:///./src/app/show-all/show-all.component.ts","webpack:///./src/app/show/show.component.css","webpack:///./src/app/show/show.component.html","webpack:///./src/app/show/show.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACU;AACd;AACG;AACD;AAErD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAgB,EAAE;IACzC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+DAAY,EAAE;IACxC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kEAAa,EAAE;CAE/C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnB7B,+DAA+D,+H;;;;;;;;;;;ACA/D,mH;;;;;;;;;;;;;;;;;;ACAkD;AACP;AAO3C;IAGE,sBAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAF7C,UAAK,GAAG,QAAQ,CAAC;IAE8B,CAAC;IAChD,+BAAQ,GAAR;IAEA,CAAC;IANU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAIkC,yDAAW;OAHlC,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACE;AACa;AACT;AACF;AACS;AACW;AACd;AACG;AACA;AAmBtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAgB;gBAChB,+DAAY;gBACZ,mEAAa;gBACb,mEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7BtB,+DAA+D,uI;;;;;;;;;;;ACA/D,qTAAqT,iBAAiB,wN;;;;;;;;;;;;;;;;;;;ACApR;AACJ;AACmB;AAOjE;IAIE,uBACU,YAAyB,EACzB,MAAsB,EACtB,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QALzB,aAAQ,GAAE,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC;IAKS,CAAC;IAC9B,gCAAQ,GAAR;QAAA,iBAOC;QANC,iCAAiC;QACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,EAAE;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAU,GAAV;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACtD,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;YACnD,KAAI,CAAC,MAAM,EAAE,CAAC;QAEhB,CAAC,CAAC;IAEJ,CAAC;IACD,oCAAY,GAAZ;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,cAAI;YACxD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC;YACnC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAlCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAMwB,yDAAW;YACjB,8DAAc;YACb,sDAAM;OAPd,aAAa,CAmCzB;IAAD,oBAAC;CAAA;AAnCyB;;;;;;;;;;;;;;;;;;;ACTiB;AACO;AAKlD;IAEE,qBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE5C,gCAAU,GAAV;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;IACnC,CAAC;IACD,+BAAS,GAAT,UAAU,MAAM;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;IAC5C,CAAC;IACD,+BAAS,GAAT,UAAU,EAAE;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,GAAE,EAAE,CAAC;IACxC,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,GAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC;IACxD,CAAC;IACD,mCAAa,GAAb,UAAc,IAAI,EAAE,EAAE;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,GAAC,EAAE,EAAE,IAAI,CAAC;IACxD,CAAC;IAnBY,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2B,+DAAU;OAF1B,WAAW,CAoBvB;IAAD,kBAAC;CAAA;AApBuB;;;;;;;;;;;;ACNxB,+DAA+D,mI;;;;;;;;;;;ACA/D,mhB;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACmB;AAMjE;IAKE,sBACU,YAAyB,EACzB,MAAsB,EACtB,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QAPzB,cAAS,GAAC;YACR,IAAI,EAAE,EAAE;SACT,CAAC;IAK2B,CAAC;IAE9B,+BAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE;IACtB,CAAC;IAED,oCAAa,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,cAAI;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAEH,sCAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAE,cAAI;YACzD,KAAI,CAAC,SAAS,GAAG;gBACf,IAAI,EAAC,EAAE;aACR,CAAC;YACF,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IA5BY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,6FAAmC;;SAEpC,CAAC;+EAOwB,yDAAW;YACjB,8DAAc;YACb,sDAAM;OARd,YAAY,CA6BxB;IAAD,mBAAC;CAAA;AA7BwB;;;;;;;;;;;;ACRzB,+DAA+D,mJ;;;;;;;;;;;ACA/D,sXAAsX,aAAa,wP;;;;;;;;;;;;;;;;;;ACAjV;AACN;AAO5C;IAIE,0BAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAElD,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE;IACtB,CAAC;IAED,wCAAa,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,cAAI;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAfU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAKkC,yDAAW;OAJlC,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;ACR7B,+DAA+D,uI;;;;;;;;;;;ACA/D,mDAAmD,aAAa,2DAA2D,YAAY,uP;;;;;;;;;;;;;;;;;;;ACArF;AACN;AACoB;AAOhE;IAUE,uBAAqB,YAAyB,EACpC,MAAsB,EACtB,OAAe;QAFJ,iBAAY,GAAZ,YAAY,CAAa;QACpC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QAXzB,WAAM,GAAC;YACL,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;SACV;QACD,SAAI,GAAE;YACJ,KAAK,EAAE,EAAE;SACV;IAK4B,CAAC;IAE9B,gCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IAED,oCAAY,GAAZ;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,cAAI;YACzD,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;YAC5C,KAAI,CAAC,MAAM,GAAE,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IACD,kCAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC;IAEJ,CAAC;IAjCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAWmC,yDAAW;YAC5B,8DAAc;YACb,sDAAM;OAZd,aAAa,CAkCzB;IAAD,oBAAC;CAAA;AAlCyB;;;;;;;;;;;;;ACT1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShowAllComponent } from './show-all/show-all.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ShowComponent} from './show/show.component';\n\nconst routes: Routes = [\n  { path: \"\", component: ShowAllComponent },\n  { path: \"new\", component: NewComponent },\n  { path: \"edit/:id\", component: EditComponent },\n  { path: \"show/:id\", component: ShowComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<h1> Favorite Authors</h1>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'public';\n  \n  constructor(private _httpService: HttpService){}\n  ngOnInit(){\n    \n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpService} from './http.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ShowAllComponent } from './show-all/show-all.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ShowComponent } from './show/show.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShowAllComponent,\n    NewComponent,\n    EditComponent,\n    ShowComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <form (submit)=\\\"editAuthor()\\\">\\n        <h6>Edit:</h6>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"editAuth.name\\\"\\n              [(ngModel)]=\\\"editAuth.name\\\" value=\\\"{{ editAuth.name }}\\\"/>\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Update\\\" />\\n          <button         </div>\\n      </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  authorId: any;\n  editAuth= {name:\"\"};\n  \n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n  ngOnInit() {\n    //Gets the ID from the URL Params\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.authorId = params['id'];\n      this.getOneAuthor()\n    });\n  }\n\n  goHome() {\n    this._router.navigate(['/']);\n  }\n\n  editAuthor() {\n    this._httpService.editCake(this.editAuth).subscribe(data => {\n      console.log(\"edit cake component in server\", data);\n      this.goHome();\n  \n    })\n\n  }\n  getOneAuthor(){\n    this._httpService.getAuthor(this.authorId).subscribe( data => {\n      console.log(\"got one author\", data)\n      this.editAuth = data['author']\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\ngetAuthors(){\n  return this._http.get('/authors')\n}\nnewAuthor(author){\n  return this._http.post('/authors', author)\n}\ngetAuthor(id){\n  return this._http.get('/authors/'+ id)\n}\n\neditCake(author){\n  return this._http.put('/authors/' +author._id, author)\n}\ncreateNewBook(book, id){\n  return this._http.post('/authors/books/new/'+id, book)\n}\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <form (submit)=\\\"createNewAuthor()\\\">\\n        <h6>Submit a new author:</h6>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Author's Name:\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"newAuthor.name\\\"\\n              [(ngModel)]=\\\"newAuthor.name\\\" />\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Create\\\" />\\n        </div>\\n      </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newAuthor={\n    name: \"\"\n  };\n  allAuthors: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this.getAllAuthors()\n  }\n\n  getAllAuthors(){\n    this._httpService.getAuthors().subscribe( data =>{\n      console.log(data, \"Got all authors\");\n      this.allAuthors = data['allAuthors']\n    })\n  }\n\ncreateNewAuthor(){\n  this._httpService.newAuthor(this.newAuthor).subscribe( data =>{\n    this.newAuthor = {\n      name:\"\"\n    };\n    this._router.navigate(['/']);\n  });\n}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctYWxsL3Nob3ctYWxsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/new']\\\">Add New Author</button>\\n    <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Name</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let auth of allAuthors\\\">\\n        <th [routerLink]=\\\"['/show/'+auth._id]\\\" scope=\\\"row\\\">{{ auth.name }}</th>\\n        <td>\\n          <button [routerLink]=\\\"['/edit/'+auth._id]\\\" class=\\\"btn btn-warning mr-2\\\">Edit</button>\\n          <button  class=\\\"btn btn-danger\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from '../http.service';\n\n@Component({\n  selector: 'app-show-all',\n  templateUrl: './show-all.component.html',\n  styleUrls: ['./show-all.component.css']\n})\nexport class ShowAllComponent implements OnInit {\n\n  allAuthors: any;\n  \n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.getAllAuthors()\n  }\n\n  getAllAuthors(){\n    this._httpService.getAuthors().subscribe( data =>{\n      console.log(data, \"Got all authors\");\n      this.allAuthors = data['allAuthors']\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3cvc2hvdy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<h3>{{author.name}}</h3>\\n\\n  <h6 *ngFor=\\\"let book of author.books\\\">\\n    {{book.title}}\\n    \\n  </h6>\\n \\n<form (submit)=\\\"createBook()\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"book.title\\\" placeholder=\\\"Book Title\\\" [(ngModel)]=\\\"book.title\\\">\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from '../http.service';\nimport { ActivatedRoute,Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n  author={\n    name: \"\",\n    books: []\n  }\n  book ={\n    title: \"\"\n  }\n  authorId: any;\n  \n  constructor( private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.authorId = params['id'];\n    })\n    this.getOneAuthor()\n  }\n\n  getOneAuthor(){\n    this._httpService.getAuthor(this.authorId).subscribe( data =>{\n     console.log(\"got One author to show\", data);\n     this.author= data['author']\n    })\n  }\n  createBook(){\n    this._httpService.createNewBook(this.book, this.authorId).subscribe(data =>{\n      this.getOneAuthor();\n    })\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}